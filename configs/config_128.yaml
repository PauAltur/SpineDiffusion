# pytorch_lightning==2.2.5
seed_everything: true
trainer:
  accelerator: auto
  strategy: auto
  devices: auto
  logger:
    class_path: pytorch_lightning.loggers.TensorBoardLogger
    init_args:
      save_dir: P:/Projects/LMB_4Dspine/Iship_Pau_Altur_Pastor/4_training_logs
      name: test
  callbacks:
    - class_path: pytorch_lightning.callbacks.ModelCheckpoint
      init_args:
        monitor: val_loss
        mode: min
    - class_path: spinediffusion.callbacks.callbacks.LogGeneratedImages
      init_args:
        every_n_epochs: 10
        num_images: 1
        num_channels: &num_channels 1
        height: &height 128
        width: &width 128
    - class_path: spinediffusion.callbacks.callbacks.GenerateCSVLog
  max_epochs: 100
  log_every_n_steps: 1
data:
  class_path: spinediffusion.datamodule.datamodule.SpineDataModule
  init_args:
    data_dir: P:/Projects/LMB_4Dspine/back_scan_database
    batch_size: 10
    transform_args:
      resample_3d_curve:
        transform_number: 0
        n_points: 256
      resample_point_cloud:
        transform_number: 1
        n_points: 65536
        method: uniform
      project_to_plane:
        transform_number: 2
        height: *height
        width: *width
        intensity: 1
        spine_factor: 1
        method: "median"
        z_lims: [-150, 100]
      close_depthmap:
        transform_number: 3
        se_size: [3, 3]
      tensorize:
        transform_number: 4
    train_fraction: 0.8
    val_fraction: 0.1
    test_fraction: 0.1
    num_workers: 8
    cache_dir: P:/Projects/LMB_4Dspine/Iship_Pau_Altur_Pastor/3_database/cache
model:
  class_path: spinediffusion.models.diffusion_models.UnconditionalDiffusionModel
  init_args:
    model:
      class_path: diffusers.UNet2DModel
      init_args:
        sample_size: *height
        in_channels: *num_channels
        out_channels: *num_channels
        layers_per_block: 2
        block_out_channels: [32, 32, 64, 64, 128, 128]
        down_block_types: ["DownBlock2D", "DownBlock2D", "DownBlock2D", "DownBlock2D", "AttnDownBlock2D", "DownBlock2D"]
        up_block_types: ["UpBlock2D", "UpBlock2D", "UpBlock2D", "UpBlock2D", "AttnUpBlock2D", "UpBlock2D"]
    scheduler:
      class_path: diffusers.DDPMScheduler
    loss:
      class_path: torch.nn.MSELoss
      init_args:
        reduction: mean
    metrics:
      MSELoss:
        class_path: torchmetrics.MeanSquaredError
      SSIM:
        class_path: torchmetrics.image.StructuralSimilarityIndexMeasure
      PSNR:
        class_path: torchmetrics.image.PeakSignalNoiseRatio
optimizer:
  class_path: torch.optim.Adam
  init_args:
    lr: 0.001
lr_scheduler:
  class_path: torch.optim.lr_scheduler.ExponentialLR
  init_args:
    gamma: 0.1
ckpt_path: null
