# pytorch_lightning==2.2.5
seed_everything: true
trainer:
  accelerator: auto
  strategy: auto
  devices: auto
  num_nodes: 1
  precision: null
  logger: null
  callbacks: null
  fast_dev_run: false
  max_epochs: 2
  min_epochs: null
  max_steps: -1
  min_steps: null
  max_time: null
  limit_train_batches: null
  limit_val_batches: null
  limit_test_batches: null
  limit_predict_batches: null
  overfit_batches: 0.0
  val_check_interval: null
  check_val_every_n_epoch: 1
  num_sanity_val_steps: null
  log_every_n_steps: null
  enable_checkpointing: null
  enable_progress_bar: null
  enable_model_summary: null
  accumulate_grad_batches: 1
  gradient_clip_val: null
  gradient_clip_algorithm: null
  deterministic: null
  benchmark: null
  inference_mode: true
  use_distributed_sampler: true
  profiler: null
  detect_anomaly: false
  barebones: false
  plugins: null
  sync_batchnorm: false
  reload_dataloaders_every_n_epochs: 0
  default_root_dir: null
data:
  class_path: spinediffusion.datamodule.datamodule.SpineDataModule
  init_args:
    data_dir: P:/Projects/LMB_4Dspine/back_scan_database
    batch_size: 10
    transform_args:
      spine_length_normalize:
        transform_number: 0
        norm_length: 1
      resample_3d_curve:
        transform_number: 1
        n_points: 256
      resample_point_cloud:
        transform_number: 2
        n_points: 65536
        method: uniform
      project_to_plane:
        transform_number: 3
        height: 128
        width: 128
        intensity: 1
      close_depthmap:
        transform_number: 4
        se_size: [3, 3]
      tensorize:
        transform_number: 5
    train_fraction: 0.8
    val_fraction: 0.1
    test_fraction: 0.1
model:
  class_path: spinediffusion.models.diffusion_models.DepthMapDiffusionModel
  init_args:
    model:
      class_path: diffusers.UNet2DModel
      init_args:
        sample_size: 128
        in_channels: 1
        out_channels: 1
        layers_per_block: 2
        block_out_channels: [128, 128, 256, 256, 512, 512]
        down_block_types: ["DownBlock2D", "DownBlock2D", "DownBlock2D", "DownBlock2D", "AttnDownBlock2D", "DownBlock2D"]
        up_block_types: ["UpBlock2D", "AttnUpBlock2D", "UpBlock2D", "UpBlock2D", "UpBlock2D", "UpBlock2D"]
    scheduler:
      class_path: diffusers.DDPMScheduler
      init_args:
        num_train_timesteps: 1000
    loss:
      class_path: torch.nn.MSELoss
      max_epochs: 100
optimizer:
  class_path: torch.optim.Adam
  init_args:
    lr: 0.01
lr_scheduler:
  class_path: torch.optim.lr_scheduler.ExponentialLR
  init_args:
    gamma: 0.1
ckpt_path: null
